paths:
  /api/carts:
    get:
      summary: Obtiene todos los carritos
      tags:
        - Carts
      responses:
        "200":
          description: Los carritos se han obtenido satisfactoriamente.
          content:
            application/json:
              schema: 
                type: array
                items:
                  $ref: '#components/schemas/Carts'
        "400":
          description: Los carritos NO se han podido obtener.
    post:
      summary: Genera el carrito con sus productos y cantidades de acuerdo a los datos enviados en el body
      tags:
        - Carts
      requestBody:
        require: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/postCarts'
  
  /api/carts/{cId}:
    get:
      summary: Obtiene un carrito en particular por su Id
      tags:
        - Carts
      parameters:
        - name: cId
          in: path
          description: Id del carrito
          schema:
            type: ObjectId
      responses:
        "200":
          description: El carrito ha sido obtenido satisfactoriamente.
          content:
            application/json:
              schema: 
                $ref: '#components/schemas/Carts'
        "400":
          description: El carrito NO se ha podido obtener.
    put:
      summary: Modifica el carrito a partir de su Id
      tags:
        - Carts
      parameters:
        - name: uId
          in: path
          description: Id del carrtio a actualizar
          schema:
            type: String
      requestBody:
        require: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/updateCart'
    delete:
      summary: Eliminar todos los productos de un carrito
      tags:
        - Carts
      parameters:
        - name: cId
          in: path
          description: Id del carrito a vaciar de productos
          schema:
            type: String
      responses:
        "200":
          description: El carrito ha vaciado exitosamente
        "400":
          description: El carrtio NO se ha podido vaciar

  /api/carts/{cId}/products/{pId}:
    post:
      summary: Agrega una cantidad de un producto puntual dentro del carrito
      tags:
        - Carts
      parameters:
        - name: uId
          in: path
          description: Id del carrtio a actualizar
          schema:
            type: String
        - name: pId
          in: path
          description: Id del producto a modificar
          schema:
            type: String
      requestBody:
        require: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/updateProductInCart'
    put:
      summary: Modifica la cantidad de un producto puntual dentro del carrito
      tags:
        - Carts
      parameters:
        - name: uId
          in: path
          description: Id del carrtio a actualizar
          schema:
            type: String
        - name: pId
          in: path
          description: Id del producto a modificar
          schema:
            type: String
      requestBody:
        require: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/updateProductInCart'
    delete:
      summary: Eliminar un producto de un carrito
      tags:
        - Carts
      parameters:
        - name: cId
          in: path
          description: Id del carrito 
          schema:
            type: String
        - name: pId
          in: path
          description: Id del producto a eliminar
          schema:
            type: String
      responses:
        "200":
          description: El producto se ha eliminado correctamente
        "400":
          description: El producto NO se ha eliminado

  /api/carts/{cId}/purchase:
    post:
      summary: Confirmar la compra de un carrito
      tags:
        - Carts
      parameters:
        - name: uId
          in: path
          description: Id del carrtio a confirmar
          schema:
            type: String

components:
  schemas:
    Carts:
      type: object
      properties:
        _id:
          type: ObjectId
          description: ID autogenerado por Mongo
        products:
          type: array
          description: Array de productos y sus cantidades en el carrito
          items:
            type: object
            properties:
              product:
                type: string
                format: ObjectId
                description: ID del producto
              quantity:
                type: integer
                description: Cantidad del producto
      required:
        - _id
        - products
        - quantity
      example:
        products: [
          {
            product: "65e8d8ace25d0afffb59ce1a",
            quantity: 3
          },
          {
            product: "661191e45f431b73af23b3e4",
            quantity: 5
          }
        ]
  requestBodies:
    updateCart:
      type: Array
      properties:
          type: array
          description: Array de productos y sus cantidades en el carrito
          items:
            type: object
            properties:
              product:
                type: string
                format: ObjectId
                description: ID del producto
              quantity:
                type: integer
                description: Cantidad del producto
      example:
        products: [
          {
            product: "65e8d8ace25d0afffb59ce1a",
            quantity: 3
          },
          {
            product: "661191e45f431b73af23b3e4",
            quantity: 5
          }
        ]
    postCarts:
      type: Array
      properties:
          type: array
          description: Array de productos y sus cantidades en el carrito
          items:
            type: object
            properties:
              product:
                type: string
                format: ObjectId
                description: ID del producto
              quantity:
                type: integer
                description: Cantidad del producto
      example:
        products: [
          {
            product: "65e8d8ace25d0afffb59ce1a",
            quantity: 3
          },
          {
            product: "661191e45f431b73af23b3e4",
            quantity: 5
          }
        ]
    updateProductInCart:
      type: Array
      properties:
          type: array
          description: Array de cantidad a indicarle al producto en el carrito
          items:
            type: object
            properties:
              quantity:
                type: integer
                description: Cantidad del producto
      example:
        {
          quantity: 3
        }
